/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TelaNovaEspecificacao.java
 *
 * Created on 26/09/2009, 09:32:49
 */
package appcmmi.form.especificacao;

import appcmmi.PrincipalFrame;
import appcmmi.db.facade.modelo.AreaProcessoFacade;
import appcmmi.db.facade.modelo.EspecificaFacade;
import appcmmi.db.facade.modelo.GenericaFacade;
import appcmmi.db.facade.modelo.MaturidadeFacade;
import appcmmi.db.pojo.modelo.AreaProcesso;
import appcmmi.db.pojo.modelo.PraticaEspecifica;
import appcmmi.db.pojo.modelo.PraticaGenerica;
import appcmmi.funcoes.Funcoes;
import appcmmi.modelo.tabela.ModeloTabelaAreaProcesso;
import appcmmi.modelo.tabela.ModeloTabelaEspecifica;
import appcmmi.modelo.tabela.ModeloTabelaGenerica;
import appcmmi.modelo.tabela.ModeloTabelaMaturidade;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author diego
 */
public class TelaNovaEspecificacao extends javax.swing.JInternalFrame {

    /** Creates new form TelaNovaEspecificacao */
    public TelaNovaEspecificacao() {
        try {
           
            inicial();
            
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    /**
     * Método de parametrização inicial da tela.
     * @throws Exception
     */
    private void inicial() throws Exception {
        maturidade = new MaturidadeFacade().retornaModeloMaturidade();
        if (maturidade.getSize() == 0) {
            areaProcesso = new AreaProcessoFacade().retornaTabelaTodasAreaProcesso();
            generica = new GenericaFacade().retornaTabelaGenericas();
            especifica = new ModeloTabelaEspecifica(new EspecificaFacade().retornaTodasEspecifica());
        } else {
            if (maturidade.getElementAt(0).getAreaProcessoList().isEmpty()) {
                areaProcesso = new ModeloTabelaAreaProcesso();
            } else {
                areaProcesso = new AreaProcessoFacade().retornaModeloAreaProcesso(
                        maturidade.getElementAt(0).getAreaProcessoList());
            }
            if (maturidade.getElementAt(0).getPraticaGenericaList().isEmpty()) {
                generica = new ModeloTabelaGenerica();
            } else {
                generica = new ModeloTabelaGenerica(maturidade.getElementAt(0).getPraticaGenericaList());
            }
            if (areaProcesso.getSize() == 0 || areaProcesso.getElementAt(0).getPraticaEspecificaList().isEmpty()) {
                especifica = new ModeloTabelaEspecifica(new EspecificaFacade().retornaTodasEspecifica());
            } else {
                especifica = new ModeloTabelaEspecifica(areaProcesso.getElementAt(0).getPraticaEspecificaList());
            }
        }

        initComponents();

        listaMaturidade.getColumnModel().getColumn(0).setMaxWidth(80);
        listaMaturidade.getColumnModel().getColumn(0).setMinWidth(40);
        listaGenerica.getColumnModel().getColumn(0).setMaxWidth(100);
        listaGenerica.getColumnModel().getColumn(0).setMinWidth(50);
        listaEspecifica.getColumnModel().getColumn(0).setMaxWidth(100);
        listaEspecifica.getColumnModel().getColumn(0).setMinWidth(50);
        listaProcesso.getColumnModel().getColumn(0).setMaxWidth(50);
        listaProcesso.getColumnModel().getColumn(0).setMinWidth(10);
        listaProcesso.getColumnModel().getColumn(1).setMaxWidth(50);
        listaProcesso.getColumnModel().getColumn(1).setMinWidth(10);
        setSize(1000, 700);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaMaturidade = new javax.swing.JTable();
        addMaturidade = new javax.swing.JButton();
        editMaturidade = new javax.swing.JButton();
        deleteMaturidade = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaProcesso = new javax.swing.JTable();
        addAreaProcesso = new javax.swing.JButton();
        editAreaProcesso = new javax.swing.JButton();
        deleteAreaProcesso = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        addGenerica = new javax.swing.JButton();
        editGenerica = new javax.swing.JButton();
        deleteGenerica = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaGenerica = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        addEspecifica = new javax.swing.JButton();
        editEspecifica = new javax.swing.JButton();
        deleteEspecifica = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        listaEspecifica = new javax.swing.JTable();
        fechar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(700, 500));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Nível de Maturidade"));
        jPanel1.setPreferredSize(new java.awt.Dimension(450, 220));

        listaMaturidade.setModel(maturidade);
        jScrollPane1.setViewportView(listaMaturidade);

        addMaturidade.setText("Adicionar");
        addMaturidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMaturidadeActionPerformed(evt);
            }
        });

        editMaturidade.setText("Editar");
        editMaturidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMaturidadeActionPerformed(evt);
            }
        });

        deleteMaturidade.setText("Excluir");
        deleteMaturidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMaturidadeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(addMaturidade, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editMaturidade, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteMaturidade, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMaturidade)
                    .addComponent(deleteMaturidade)
                    .addComponent(editMaturidade)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Área de Processo"));
        jPanel2.setPreferredSize(new java.awt.Dimension(450, 220));

        listaProcesso.setModel(areaProcesso);
        jScrollPane2.setViewportView(listaProcesso);

        addAreaProcesso.setText("Adicionar");
        addAreaProcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAreaProcessoActionPerformed(evt);
            }
        });

        editAreaProcesso.setText("Editar");
        editAreaProcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editAreaProcessoActionPerformed(evt);
            }
        });

        deleteAreaProcesso.setText("Excluir");
        deleteAreaProcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAreaProcessoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(addAreaProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editAreaProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteAreaProcesso, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAreaProcesso)
                    .addComponent(deleteAreaProcesso)
                    .addComponent(editAreaProcesso)))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Prática Genérica"));
        jPanel3.setPreferredSize(new java.awt.Dimension(450, 220));

        addGenerica.setText("Adicionar");
        addGenerica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGenericaActionPerformed(evt);
            }
        });

        editGenerica.setText("Editar");
        editGenerica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editGenericaActionPerformed(evt);
            }
        });

        deleteGenerica.setText("Excluir");
        deleteGenerica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteGenericaActionPerformed(evt);
            }
        });

        listaGenerica.setModel(generica);
        jScrollPane3.setViewportView(listaGenerica);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(addGenerica, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editGenerica, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteGenerica, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addGenerica)
                    .addComponent(deleteGenerica)
                    .addComponent(editGenerica)))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Prática Específica"));
        jPanel5.setPreferredSize(new java.awt.Dimension(450, 220));

        addEspecifica.setText("Adicionar");
        addEspecifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEspecificaActionPerformed(evt);
            }
        });

        editEspecifica.setText("Editar");
        editEspecifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEspecificaActionPerformed(evt);
            }
        });

        deleteEspecifica.setText("Excluir");
        deleteEspecifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEspecificaActionPerformed(evt);
            }
        });

        listaEspecifica.setModel(especifica);
        jScrollPane4.setViewportView(listaEspecifica);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(addEspecifica, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editEspecifica, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteEspecifica, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addEspecifica)
                    .addComponent(editEspecifica)
                    .addComponent(deleteEspecifica)))
        );

        fechar.setText("Fechar");
        fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fecharActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(fechar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(419, 419, 419))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fechar))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exclusão da maturidade selecionada na respectiva tabela.
     * @param evt
     */
    private void deleteMaturidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMaturidadeActionPerformed
        try {

            int certeza = 0;
            Object[] opcoes = {"Sim", "Não"};
            certeza = JOptionPane.showOptionDialog(null,
                    exclusao, "Confirmação",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
            if (certeza == 0) {
                int[] delete = listaMaturidade.getSelectedRows();
                MaturidadeFacade facade = new MaturidadeFacade();
                for (int x = delete.length - 1; x >= 0; x--) {
                    facade.deletarMaturidade(maturidade.getElementAt(delete[x]));
                    maturidade.removeElement(delete[x]);
                }
                atualizar();
                JOptionPane.showMessageDialog(this, "Nível de maturidade excluída.", "Com sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteMaturidadeActionPerformed

    /**
     * Aciona a tela para adição de um novo nível de maturidade.
     * @param evt
     */
    private void addMaturidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMaturidadeActionPerformed
        try {
            new TelaNovaMaturidade(PrincipalFrame.getFrames()[0], true, null).setVisible(true);
            maturidade = new MaturidadeFacade().retornaModeloMaturidade();
            atualizar();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e);
        }
    }//GEN-LAST:event_addMaturidadeActionPerformed

    /**
     * Aciona a tela para edição do nível de maturidade selecionada na tabela.
     * @param evt
     */
    private void editMaturidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMaturidadeActionPerformed

        //int idx = listaMaturidade.getSelectedIndex();
        int idx = listaMaturidade.getSelectedRow();
        new TelaNovaMaturidade(PrincipalFrame.getFrames()[0], true, maturidade.getElementAt(idx)).setVisible(true);
        try {
            maturidade.setList(new MaturidadeFacade().retornaTodasMaturidade());
            atualizar();
        } catch (Exception ex) {
            Logger.getLogger(TelaNovaEspecificacao.class.getName()).log(Level.SEVERE, null, ex);
            ex.printStackTrace();
        }
       
    }//GEN-LAST:event_editMaturidadeActionPerformed

    /**
     * Aciona a tela para adição de uma nova área de processo.
     * @param evt
     */
    private void addAreaProcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAreaProcessoActionPerformed
        try {
            new TelaNovaAreaProcesso(PrincipalFrame.getFrames()[0], true, null).setVisible(true);
            areaProcesso = new AreaProcessoFacade().retornaTabelaTodasAreaProcesso();
            atualizar();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_addAreaProcessoActionPerformed

    /**
     * Fecha a tela.
     * @param evt
     */
    private void fecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fecharActionPerformed
        this.setVisible(false);
        PrincipalFrame.getPane().remove(this);
    }//GEN-LAST:event_fecharActionPerformed

    /**
     * Aciona a tela para edição da área de processo selecionada na tabela.
     * @param evt
     */
    private void editAreaProcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editAreaProcessoActionPerformed
        try {
            new TelaNovaAreaProcesso(PrincipalFrame.getFrames()[0], true, areaProcesso.getElementAt(listaProcesso.getSelectedRow())).setVisible(true);
            areaProcesso = new AreaProcessoFacade().retornaTabelaTodasAreaProcesso();
            atualizar();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e, "Erro", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }
    }//GEN-LAST:event_editAreaProcessoActionPerformed

    /**
     * Apaga a área de processo selecionada.
     * @param evt
     */
    private void deleteAreaProcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAreaProcessoActionPerformed
        try {
            int certeza = 0;
            Object[] opcoes = {"Sim", "Não"};
            certeza = JOptionPane.showOptionDialog(null,
                    exclusao, "Confirmação",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
            if (certeza == 0) {
                int[] delete = listaProcesso.getSelectedRows();
                AreaProcessoFacade facade = new AreaProcessoFacade();
                for (int x = delete.length - 1; x >= 0; x--) {
                    AreaProcesso excluir = areaProcesso.getElementAt(delete[x]);
                    facade.excluirAreaProcesso(excluir);
                    areaProcesso.removeElement(excluir);
                }

                atualizar();
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e, "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_deleteAreaProcessoActionPerformed

    /**
     * Apaga a prática genérica selecionada na tabela.
     * @param evt
     */
    private void deleteGenericaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteGenericaActionPerformed
        try {
            int certeza = 0;
            Object[] opcoes = {"Sim", "Não"};
            certeza = JOptionPane.showOptionDialog(null,
                    exclusao, "Confirmação",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
            if (certeza == 0) {
                int[] delete = listaGenerica.getSelectedRows();
                GenericaFacade facade = new GenericaFacade();
                for (int x = delete.length - 1; x >= 0; x--) {
                    PraticaGenerica gen = generica.getElementAt(delete[x]);
                    facade.excluirGenerica(gen);
                    generica.removeElement(gen);
                }
                atualizar();
                JOptionPane.showMessageDialog(this, "Prática Genérica excluída.", "Com sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteGenericaActionPerformed

    /**
     * Apaga a prática específica selecionada na tabela.
     * @param evt
     */
    private void deleteEspecificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEspecificaActionPerformed
        try {
            int certeza = 0;
            Object[] opcoes = {"Sim", "Não"};
            certeza = JOptionPane.showOptionDialog(null,
                    exclusao, "Confirmação",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcoes, opcoes[0]);
            if (certeza == 0) {
                int[] delete = listaEspecifica.getSelectedRows();
                EspecificaFacade facade = new EspecificaFacade();
                for (int x = delete.length - 1; x >= 0; x--) {
                    PraticaEspecifica esp = especifica.getElementAt(delete[x]);
                    facade.excluirEspecifica(esp);
                    especifica.removeElement(esp);
                }
                atualizar();
                JOptionPane.showMessageDialog(this, "Prática Específica excluída.", "Com sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
            e.printStackTrace();
        }
    }//GEN-LAST:event_deleteEspecificaActionPerformed

    /**
     * Aciona a tela para adição de uma nova prática específica
     * @param evt
     */
    private void addEspecificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEspecificaActionPerformed
        try {
            new TelaNovaPratica(PrincipalFrame.getFrames()[0], true, new PraticaEspecifica());
            especifica = new ModeloTabelaEspecifica(new EspecificaFacade().retornaTodasEspecifica());
            atualizar();
        } catch (Exception ex) {
            ex.printStackTrace();
            Funcoes.erro("Erro", ex.getMessage());
        }
    }//GEN-LAST:event_addEspecificaActionPerformed

    /**
     * Aciona a tela para adição de uma nova prática genérica
     * @param evt
     */
    private void addGenericaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGenericaActionPerformed
        try {
            new TelaNovaPratica(PrincipalFrame.getFrames()[0], true, new PraticaGenerica());
            generica = new GenericaFacade().retornaTabelaGenericas();
            atualizar();
        } catch (Exception ex) {
            ex.printStackTrace();
            Funcoes.erro("Erro", ex.getMessage());
        }
    }//GEN-LAST:event_addGenericaActionPerformed


    /**
     * Aciona a tela para edição da prática genérica selecionada.
     * @param evt
     */
    private void editGenericaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editGenericaActionPerformed
        try {
            new TelaNovaPratica(PrincipalFrame.getFrames()[0], true, this.generica.getElementAt(listaGenerica.getSelectedRow()));
            generica = new GenericaFacade().retornaTabelaGenericas();
            atualizar();
        } catch (Exception ex) {
            ex.printStackTrace();
            Funcoes.erro("Erro", ex.getMessage());
        }

    }//GEN-LAST:event_editGenericaActionPerformed

    /**
     * Aciona a tela para edição da prática específica selecionada.
     * @param evt
     */
    private void editEspecificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEspecificaActionPerformed
        try {
            new TelaNovaPratica(PrincipalFrame.getFrames()[0], true, this.especifica.getElementAt(listaEspecifica.getSelectedRow()));
            especifica = new ModeloTabelaEspecifica(new EspecificaFacade().retornaTodasEspecifica());
            atualizar();
        } catch (Exception ex) {
            Funcoes.erro("Erro", ex.getMessage());
        }
    }//GEN-LAST:event_editEspecificaActionPerformed

    /**
     * Método interno para atualização das tabelas.
     */
    private void atualizar() {
        listaMaturidade.setModel(maturidade);
        listaProcesso.setModel(areaProcesso);
        listaGenerica.setModel(generica);
        listaEspecifica.setModel(especifica);
       
        this.revalidate();
        this.repaint();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAreaProcesso;
    private javax.swing.JButton addEspecifica;
    private javax.swing.JButton addGenerica;
    private javax.swing.JButton addMaturidade;
    private javax.swing.JButton deleteAreaProcesso;
    private javax.swing.JButton deleteEspecifica;
    private javax.swing.JButton deleteGenerica;
    private javax.swing.JButton deleteMaturidade;
    private javax.swing.JButton editAreaProcesso;
    private javax.swing.JButton editEspecifica;
    private javax.swing.JButton editGenerica;
    private javax.swing.JButton editMaturidade;
    private javax.swing.JButton fechar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable listaEspecifica;
    private javax.swing.JTable listaGenerica;
    private javax.swing.JTable listaMaturidade;
    private javax.swing.JTable listaProcesso;
    // End of variables declaration//GEN-END:variables
    private ModeloTabelaMaturidade maturidade;
    private ModeloTabelaAreaProcesso areaProcesso;
    private ModeloTabelaGenerica generica;
    private ModeloTabelaEspecifica especifica;
    private static final String exclusao = "Tem certeza que deseja excluir o(s) item(ns) selecionado(s)?";
}
