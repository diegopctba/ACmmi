/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TelaLogin.java
 *
 * Created on 22/10/2009, 18:40:19
 */
package appcmmi.form.login;

import appcmmi.PrincipalFrame;
import appcmmi.db.HibernateUtil;
import appcmmi.db.facade.AvaliadorFacade;
import appcmmi.funcoes.Funcoes;
import java.awt.Component;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JProgressBar;
import javax.swing.SwingWorker;
import org.hibernate.JDBCException;

/**
 * Tela inicial de carregamento do sistema
 * @author Alexandre
 */
public class TelaLogin extends javax.swing.JFrame {

    /** Creates new form TelaLogin */
    public TelaLogin() {

            initComponents();
            this.setLocationRelativeTo(PrincipalFrame.getFrames()[0]);
            this.setVisible(true);
            visible(false);
            barra.setStringPainted(true);
            barra.setString("");
            Inicializa in = new Inicializa(this, imagem, barra);
            try {
                imagem.setVisible(true);
                in.execute();
            } catch (Exception ex) {
                ex.printStackTrace();
                Funcoes.erro("Erro", ex.getMessage());
            }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        barra = new javax.swing.JProgressBar();
        imagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Avaliação CMMI");
        setName("frm_Login"); // NOI18N
        setResizable(false);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(barra, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 500, -1));

        imagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/appcmmi/form/imagem/logo.png"))); // NOI18N
        imagem.setMaximumSize(new java.awt.Dimension(500, 100));
        imagem.setMinimumSize(new java.awt.Dimension(500, 100));
        imagem.setOpaque(true);
        getContentPane().add(imagem, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Indica a visualização da barra de progresso
     * @param enable
     */
    private void visible(boolean enable) {
        barra.setIndeterminate(!enable);
        barra.setEnabled(!enable);
        barra.setVisible(!enable);
        this.pack();
        this.repaint();
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar barra;
    private javax.swing.JLabel imagem;
    // End of variables declaration//GEN-END:variables

    /**
     * Classe responsável pela thread da barra de progressos
     * @author diego
     * @since 29/10/2009
     */
    private class Inicializa extends SwingWorker<Void, Integer> {

        private Component tela;
        private JLabel label;
        private JProgressBar bar;

        /**
         * Construtor da classe Inicializa
         * @param tela
         * @param label
         * @param bar
         */
        public Inicializa(Component tela, JLabel label, JProgressBar bar) {
            this.tela = tela;
            this.label = label;
            this.bar = bar;
        }

        /**
         * Método responsável pela execução da thread
         * @return
         * @throws Exception
         */
        @Override
        protected Void doInBackground() throws Exception {
            barra.setString("Carregando dados");
            try {
                new AvaliadorFacade().listar();
            } catch (SQLException se) {
                se.printStackTrace();
            } catch (JDBCException ex) {
                if (ex.getCause() != null && ex.getCause().getClass().equals(SQLException.class)) {
                    Funcoes.warn("Atenção", "Banco de dados não encontrado, favor selecionar\no local para o armazenamento");
                    new TelaPropriedades(PrincipalFrame.getFrames()[0], true);
                    if (HibernateUtil.criarBanco()) {
                        Funcoes.info("Banco de dados", "Banco de dados criado com sucesso!");
                    }
                } else {
                    Funcoes.erro("Login", "Verique a conexão.");
                    Logger.getLogger(TelaLogin.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (Exception ex) {
                Funcoes.erro("Login", ex.getMessage());
            } finally {
                barra.setString("Dados carregados");
                Thread.sleep(1000);
            }
            barra.setString("Aguarde enquanto a aplicação é inicializada");
            Thread.sleep(1500);
            visible(true);
            new PrincipalFrame();
            dispose();
            return null;
        }
    }
}
